{"version":3,"sources":["Components/NavBar/NavBar.js","Constants/Constants.js","axios.js","Components/Banner/Banner.js","RowPost/RowPost.js","Urls.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","API_KEY","imageURL","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","res","console","log","data","results","sort","a","b","Math","random","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","urlid","setUrlid","Urls","catch","err","map","obj","onClick","id","resp","length","isSmall","opt","height","width","playerVars","autoplay","videoId","key","originals","actions","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c3e0819.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <img\r\n        className=\"logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n        alt=\"kk\"\r\n      />\r\n      <img\r\n        className=\"avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","export const baseURL='https://api.themoviedb.org/3';\r\nexport const API_KEY='674b0955c72c998107161d16a331c305';\r\nexport const imageURL='https://image.tmdb.org/t/p/original';\r\n","import axios from 'axios'\r\nimport {baseURL} from  './Constants/Constants'\r\nconst instance=axios.create({\r\n    baseURL: baseURL,\r\n});\r\nexport default instance","\r\nimport React,{useEffect, useState} from 'react'\r\nimport { API_KEY,imageURL } from '../../Constants/Constants'\r\nimport axios from '../../axios'\r\nimport './Banner.css'\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState()\r\n    useEffect(() => {\r\n        axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((res)=>{\r\n            console.log(res.data.results[0]);\r\n            setMovie(res.data.results.sort(function(a,b){return 0.5-Math.random()})[0]);\r\n        })\r\n        \r\n    }, [])\r\n    return (\r\n        <div\r\n        style={{backgroundImage:`url(${movie ?imageURL+movie.backdrop_path:\"\"})`}}\r\n        className='banner'>\r\n<div className='content'>\r\n    <h1 className='title'>{movie ? movie.title:\"\"}</h1>\r\n        <div className='banner_buttons'>\r\n            <button className='button'>play</button>\r\n            <button className='button'>my list</button>\r\n\r\n        </div>\r\n        <h1 className='discription'>{movie?movie.overview:\"\"} </h1>\r\n    </div>     \r\n    <div className=\"fade_bottom\"></div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import axios from \"../axios\";\r\nimport YouTube from \"react-youtube\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { imageURL, API_KEY } from \"../Constants/Constants\";\r\nimport \"./RowPost.css\";\r\n\r\nfunction RowPost(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [urlid, setUrlid] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(props.Urls)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setMovies(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        //alert('network error');\r\n      });\r\n  }, []);\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 2,\r\n    },\r\n  };\r\n  const handleMovie = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        if (resp.data.results.length !== 0) {\r\n          setUrlid(resp.data.results[0]);\r\n        } else {\r\n          console.log(\"array empty\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{props.title}s</h2>\r\n      <div className=\"posters\">\r\n        {movies.map((obj) => (\r\n          <img\r\n            onClick={() => handleMovie(obj.id)}\r\n            className={props.isSmall ? \"smallPoster\" : \"poster\"}\r\n            src={`${imageURL + obj.backdrop_path}`}\r\n            alt=\"poster\"\r\n          />\r\n        ))}\r\n      </div>\r\n      {urlid && <YouTube opt={opts} videoId={urlid.key} />}\r\n    </div>\r\n  );\r\n}\r\nexport default RowPost;\r\n","import {API_KEY} from './Constants/Constants'\r\nexport const originals=`discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const actions=`discover/movie?api_key=${API_KEY}&with_genres=28`","import React from 'react'\nimport NavBar from './Components/NavBar/NavBar'\nimport './App.css'\nimport Banner from './Components/Banner/Banner'\nimport RowPost from './RowPost/RowPost'\nimport { actions, originals } from './Urls'\nfunction App() {\n  return (\n    <div className=\"App\">\n   <NavBar/>\n   <Banner/>\n   <RowPost Urls={originals}  title='Netflix originals'/>\n   <RowPost Urls={actions} title='actions' isSmall/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}